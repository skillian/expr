// Code generated by "stringer -type opCode -trimprefix op"; DO NOT EDIT.

package expr

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[opNop-0]
	_ = x[opNot-1]
	_ = x[opAnd-2]
	_ = x[opOr-3]
	_ = x[opEq-4]
	_ = x[opNe-5]
	_ = x[opGt-6]
	_ = x[opGe-7]
	_ = x[opLt-8]
	_ = x[opLe-9]
	_ = x[opAdd-10]
	_ = x[opSub-11]
	_ = x[opMul-12]
	_ = x[opDiv-13]
	_ = x[opConv1-14]
	_ = x[opConv2-15]
	_ = x[opSwap2-16]
	_ = x[opDup-17]
	_ = x[opLdc-18]
	_ = x[opLdv-19]
	_ = x[opLdm-20]
	_ = x[opLdma-21]
	_ = x[opLdk-22]
}

const _opCode_name = "NopNotAndOrEqNeGtGeLtLeAddSubMulDivConv1Conv2Swap2DupLdcLdvLdmLdmaLdk"

var _opCode_index = [...]uint8{0, 3, 6, 9, 11, 13, 15, 17, 19, 21, 23, 26, 29, 32, 35, 40, 45, 50, 53, 56, 59, 62, 66, 69}

func (i opCode) String() string {
	if i >= opCode(len(_opCode_index)-1) {
		return "opCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _opCode_name[_opCode_index[i]:_opCode_index[i+1]]
}
